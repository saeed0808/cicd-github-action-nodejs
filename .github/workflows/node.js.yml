name: Node.js Pipeline

on:
  push:
    branches:
      - master

#env:
#  SONARQUBE_URL: http://127.0.0.1:9000
#  DOCKER_USERNAME: <your DockerHub username>
#  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install


  sonarqube:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install SonarScanner
        run: |
          curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo npm install -g sonarqube-scanner

#      - name: Run SonarScanner
#        run: |
#          sonar-scanner \
#            -Dsonar.projectKey=$GITHUB_REPOSITORY \
#            -Dsonar.sources=./ \
#            -Dsonar.host.url=$SONARQUBE_URL \
#            -Dsonar.login=$SONARQUBE_TOKEN
#
#  build-docker-image:
#    needs: sonarqube
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Build Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }}
#
#  deploy:
#    needs: build-docker-image
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Pull Docker image
#        uses: docker/metadata-action@v3
#        with:
#          images: ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }}
#      - name: Start Docker container
#        run: |
#          docker run --rm -p 3000:3000 ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }}

#################
#name: Node.js CI
#
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Setup Node.js
#      uses: actions/setup-node@v2-beta
#      with:
#        node-version: '10'
#
#    - name: Install dependencies
#      run: npm install
#
##    - name: Run tests
##      run: npm test
#
#
##name: SonarQube Analysis
#
##on:
##  push:
##    branches: [ master ]
#
#jobs:
#  sonarqube:
#    name: SonarQube
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: SonarQube Scanner
#        uses: SonarSource/sonarqube-scanner-action@v1
#        with:
#          sonarqube-url: 'http://localhost:9000'
#          sonarqube-login: ${{ secrets.SONARQUBE_TOKEN }}
#

#    - name: SonarQube Scan
#      uses: sonarsource/sonarqube-scan-action@v1
#      with:
#        sonarqube-url: 'http://192.168.33.40:9000'
#        scanner-version: '4.5.0'
#        project-key: 'nodejs-hello-world'
#        project-name: 'Node.js Hello World'
#        project-version: '1.0.0'
#        sources: '.'
#        extra-properties: |
#          sonar.javascript.file.suffixes=.js
#          sonar.coverage.exclusions=node_modules/**/*,test/**/*
#
#    - name: Build Docker image
#      run: |
#        docker build -t your-docker-username/nodejs-hello-world:latest .
#        docker tag your-docker-username/nodejs-hello-world:latest your-docker-username/nodejs-hello-world:1.0.0
#
#    - name: Push Docker image
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}
#      run: |
#        docker push your-docker-username/nodejs-hello-world:latest
#        docker push your-docker-username/nodejs-hello-world:1.0.0
#
